#+TITLE: Univariate test vs multivariate test
#+Author: 

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
path <- "c:/Users/hpl802/Documents/GitHub/bozenne.github.io/doc/Univariate-vs-Multivariate-test"
setwd(path)
#+END_SRC

#+RESULTS:

#+BEGIN_SRC R :exports both :results output :session *R* :cache no
library(mvtnorm)
library(data.table)
library(ggplot2)
library(ggforce) # install.packages("ggforce")
#+END_SRC

#+RESULTS:

* One-dimensional test

Create a 1D-grid of values corresponding to the possible values of the 1D statistic test:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
grid1D <- seq(-3,3,0.025)
#+END_SRC

#+RESULTS:

The rejection region at 5% is defined by the 0.025 and 0.975 quantiles of the normal distribution:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
rejection1D <- c(qnorm(0.025), qnorm(0.975))
rejection1D
#+END_SRC

#+RESULTS:
: [1] -1.959964  1.959964

#+BEGIN_SRC R :exports code :results output :session *R* :cache no
plot(grid1D, dnorm(grid1D), type = "o", xlab = "value of the statistic test", 
     ylab = "density")
abline(v = rejection1D, col = "red")
legend("topright", col = "red", lty = 1, legend = "rejection zone", bty = "n")
#+END_SRC

#+RESULTS:

We can then plot the values of the statistic tests and the rejection region:
#+BEGIN_SRC R :exports none :results graphics :file "figures/1D-test.pdf" :exports results :session *R* :cache no
plot(grid1D, dnorm(grid1D), type = "o", xlab = "value of the statistic test", 
     ylab = "density")
abline(v = rejection1D, col = "red")
legend("topright", col = "red", lty = 1, legend = "rejection zone", bty = "n")
#+END_SRC

#+ATTR_LATEX: :width 0.7\textwidth
#+RESULTS[<2018-10-29 09:35:01> 72e9e2e7d5685596714e910f74169928af6599de]:
[[file:figures/1D-test.pdf]]




* 2 dimensional test

Create a 2D-grid of values corresponding to the possible values of the 2D statistic test:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
grid2D <- as.data.table(expand.grid(beta1 = grid1D, beta2 = grid1D))
grid2D[, density := dmvnorm(cbind(beta1, beta2))]
range(grid2D$density)
#+END_SRC

#+RESULTS:
: [1] 1.964128e-05 1.591549e-01

If we would do two univariate tests (not accounting for multiple
testing), the rejection region at 5% would be a square whose size is
defined the 0.025 and 0.975 quantiles of the normal distribution:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
rejection2D.2uni <- data.table(xmax = qnorm(0.975, mean = 0, sd = 1),
                               ymax = qnorm(0.975, mean = 0, sd = 1),
                               xmin = qnorm(0.025, mean = 0, sd = 1),
                               ymin = qnorm(0.025, mean = 0, sd = 1))
rejection2D.2uni
#+END_SRC

#+RESULTS:
:        xmax     ymax      xmin      ymin
: 1: 1.959964 1.959964 -1.959964 -1.959964

When we account for multiple comparison we get:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
rejection2D.2uniadj <- data.table(xmax = qmvnorm(0.95, mean = c(0,0), sigma = diag(1,2), tail = "both")$quantile,
                                  ymax = qmvnorm(0.95, mean = c(0,0), sigma = diag(1,2), tail = "both")$quantile,
                                  xmin = -qmvnorm(0.95, mean = c(0,0), sigma = diag(1,2), tail = "both")$quantile, 
                                  ymin = -qmvnorm(0.95, mean = c(0,0), sigma = diag(1,2), tail = "both")$quantile)
rejection2D.2uniadj
#+END_SRC

#+RESULTS:
:        xmax     ymax      xmin      ymin
: 1: 2.236422 2.236422 -2.236422 -2.236422

If we do a bivariate test, the rejection region at 5% would be a
circle whose radius is the 0.95 quantile of a chi-squared distribution
with 2 degrees of freedom:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
rejection2D.chisq <- sqrt(qchisq(0.95, df = 2))
rejection2D.chisq
#+END_SRC

#+RESULTS:
: [1] 2.447747

#+BEGIN_SRC R :exports code :results output :session *R* :cache no
  gg2D <- ggplot() + labs(x=expression(beta[1]), y=expression(beta[2]))
  gg2D <- gg2D + geom_raster(data = grid2D,aes(x=beta1, y=beta2, fill = density))
  gg2D <- gg2D + scale_fill_gradient(low="white", high="blue")

  ## gg2D <- gg2D + geom_rect(data = rejection2D.2adj, 
  ##                          aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, 
  ##                              colour = "2 univariate Wald tests (non-adjusted)"), 
  ##                          size = 2,
  ##                          fill  = NA) 
  gg2D <- gg2D + geom_rect(data = rejection2D.2uniadj, 
                           aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, 
                               colour = "2 univariate Wald tests (adjusted)"), 
                           size = 2,
                           fill  = NA) 
  gg2D <- gg2D + geom_circle(aes(x0=0, y0=0, r = rejection2D.chisq, 
								 color = "1 Chi-2 test"),
							 size = 2)
  gg2D <- gg2D + labs(color = "critical quantile")
  gg2D
#+END_SRC

#+RESULTS:

#+BEGIN_SRC R :exports none :results raw :session *R* :cache no
ggsave(filename = "./figures/2D-test.pdf",
       plot = gg2D  + theme(text = element_text(size=20)),
       width = 12, height = 9)
#+END_SRC

#+RESULTS[<2017-11-24 10:22:16> 013087192e1e1f44952bd43ee539e67b4cbc07a5]:

[[./figures/2D-test.pdf]]

* CONFIG :noexport:
# #+LaTeX_HEADER:\affil{Department of Biostatistics, University of Copenhagen, Copenhagen, Denmark}
#+LANGUAGE:  en
#+LaTeX_CLASS: org-article
#+OPTIONS:   title:t toc:nil date:nil todo:t 
#+OPTIONS:   H:3 num:t 
#+OPTIONS:   TeX:t LaTeX:t

** latex packages
#+LaTeX_HEADER: %
#+LaTeX_HEADER: %%%% additional packages %%%%
#+LaTeX_HEADER: %
#+LaTeX_HEADER:\usepackage{authblk}

** code
#+PROPERTY: header-args :session *R*
#+PROPERTY: header-args :tange yes % extract source code: http://orgmode.org/manual/Extracting-source-code.html
#+PROPERTY: header-args :cache no
#+LATEX_HEADER: \RequirePackage{fancyvrb}
#+LATEX_HEADER: \DefineVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\small,formatcom = {\color[rgb]{0.5,0,0}}}

** Image
#+LATEX_HEADER: \RequirePackage{epstopdf} % to be able to convert .eps to .pdf image files

** latex command
#+LaTeX_HEADER: %
#+LaTeX_HEADER: %%%% additional latex commands %%%%
#+LaTeX_HEADER: %
