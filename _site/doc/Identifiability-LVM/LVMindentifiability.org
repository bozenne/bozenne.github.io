#+TITLE: Latent variable model and identifiability
#+Author: Brice Ozenne

#+BEGIN_SRC R :exports none :session *R* :cache no
path <- "c:/Users/hpl802/Documents/GitHub/consultationNRU/download/Identifiability - TODO/" 
path.figure <- file.path(path,"figures")
#+END_SRC

#+RESULTS:
: c:/Users/hpl802/Documents/GitHub/consultationNRU/download/Identifiability - TODO//figures


* A necessary condition for identifiability
One way to assess identifiability of a model is to count the number of parameters vs. the
number of sufficient statistics brought by the data. If the number of parameters in the
model exceed the number of sufficient statistics brought by the data the model is no more
identifiable.

** Example in univariate linear models
Assuming normality of my variable, the mean and variance are
sufficient statistics (i.e. knowing the mean and the variance, I can
simulate new data following the same law as my observed data). Then I
need at least two observations to fit a linear model:

#+BEGIN_SRC R :exports both :results output :session *R* :cache no
set.seed(10)
data <- data.frame(Y = rnorm(10),
                   X = rnorm(10))
summary(lm(Y ~ 1, data = data[1,, drop = FALSE]))
#+END_SRC

#+RESULTS:
#+begin_example

Call:
lm(formula = Y ~ 1, data = data[1, , drop = FALSE])

Residuals:
ALL 1 residuals are 0: no residual degrees of freedom!

Coefficients:
            Estimate Std. Error t value Pr(>|t|)
(Intercept)  0.01875         NA      NA       NA

Residual standard error: NaN on 0 degrees of freedom
#+end_example

#+BEGIN_SRC R :exports both :results output :session *R* :cache no
summary(lm(Y ~ 1, data = data[1:2,, drop = FALSE]))
#+END_SRC

#+RESULTS:
#+begin_example

Call:
lm(formula = Y ~ 1, data = data[1:2, , drop = FALSE])

Residuals:
      1       2 
 0.1015 -0.1015 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)
(Intercept) -0.08275    0.10150  -0.815    0.565

Residual standard error: 0.1435 on 1 degrees of freedom
#+end_example

If I also want to adjust on X, the new sufficient statistic to estimate is the covariance between
X and Y so I need at least one more observation:

#+BEGIN_SRC R :exports both :results output :session *R* :cache no
summary(lm(Y ~ X, data = data[1:2,, drop = FALSE]))
#+END_SRC

#+RESULTS:
#+begin_example

Call:
lm(formula = Y ~ X, data = data[1:2, , drop = FALSE])

Residuals:
ALL 2 residuals are 0: no residual degrees of freedom!

Coefficients:
            Estimate Std. Error t value Pr(>|t|)
(Intercept)  -0.6277         NA      NA       NA
X             0.5867         NA      NA       NA

Residual standard error: NaN on 0 degrees of freedom
Multiple R-squared:      1,	Adjusted R-squared:    NaN 
F-statistic:   NaN on 1 and 0 DF,  p-value: NA
#+end_example

#+BEGIN_SRC R :exports both :results output :session *R* :cache no
summary(lm(Y ~ X, data = data[1:3,, drop = FALSE]))
#+END_SRC

#+RESULTS:
#+begin_example

Call:
lm(formula = Y ~ X, data = data[1:3, , drop = FALSE])

Residuals:
       1        2        3 
-0.07153  0.09643 -0.02490 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)  
(Intercept) -1.09101    0.09767 -11.171   0.0568 .
X            1.07216    0.12465   8.602   0.0737 .
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.1226 on 1 degrees of freedom
Multiple R-squared:  0.9867,	Adjusted R-squared:  0.9733 
F-statistic: 73.99 on 1 and 1 DF,  p-value: 0.07368
#+end_example

* Application to latent variable models (lvm)

In a latent variable model things are simular. Because we are interested in modeling the
relationship between variables, usually we focus on the covariance matrix: does the observed
covariance matrix enable to identify the modeled covariance matrix? 

** Example: lvm with bivariate outcome
Consider the following model:

#+BEGIN_SRC R :exports both :results output :session *R* :cache no
library(lava)

lvm.2Y <- lvm(c(Y, E) ~ eta)
lvm.2Y <- latent(lvm.2Y, "eta")
#+END_SRC

#+RESULTS:

#+BEGIN_SRC R :results output raw drawer  :exports none :session *R* :cache no 
pdf(file.path(path.figure,"show-bivariateLVM.pdf"))
plot(lvm.2Y)
dev.off()
#+END_SRC

#+RESULTS:
:RESULTS:
null device 
          1
:END:

#+ATTR_LATEX: :width 0.5\textwidth
file:./figures/show-bivariateLVM.pdf

This model involves 3 variables (2 observed and 1 latent). We can
write the *full variance-covariance matrix* between all the variables:
#+BEGIN_EXPORT latex
\begin{align*}
\Sigma_{Y,\eta,E} = \begin{bmatrix} 
\Var(Y) & \Cov(Y,\eta) & \Cov(Y,E) \\ & \Var(\eta) & \Cov(\eta,E) \\ & & \Var(E)  \\
\end{bmatrix} 
\end{align*}
#+END_EXPORT

The *empirical variance-covariance matrix* only contains three different parameters:
#+BEGIN_EXPORT latex
\begin{align*}
S = 
\begin{bmatrix} 
\Var(Y) & \Cov(Y,E) \\ & \Var(E) \\
\end{bmatrix} 
\end{align*}
#+END_EXPORT
We can check that in R:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
n <- 1e3
df.2Y <- sim(lvm.2Y, n, latent = FALSE)
cov(df.2Y)
#+END_SRC

#+RESULTS:
:          Y        E
: Y 2.067053 1.010209
: E 1.010209 1.902986


By default lava parametrize the *modeled variance-covariance matrix*,
setting some covariance links to a fixed value. In lava notations, we
have:
#+BEGIN_EXPORT latex
\begin{align*}
\theta = \left(Y \sim\sim Y, \eta \sim\sim \eta, E \sim \eta, E \sim\sim E\right)
\end{align*}
#+END_EXPORT
We therefore need to estimate the 4 parameters from the empirical
covariance matrix.

For the mean parameters the full expectation vector would contain 3
parameters, one for each variable. We only observe two of them (\(Y\)
and \(E\)) and by default lava fix the intercept of \(Y\) to be 0 so
there are only two mean parameters. 

In total we have 6 parameters to estimate (2 mean, 4
variance-covariance) but can only estimate 5 empirical moments (2
mean, 3 variance-covariance). The model is therefore not identifiable.
This means that the lvm won't properly converge:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
estimate(lvm.2Y, data = df.2Y)
#+END_SRC

#+RESULTS:
#+begin_example
                       Estimate  Std. Error     Z-value P-value
Measurements:                                                  
   E~eta             1.2791e+00  2.3246e+06  0.0000e+00       1
Intercepts:                                                    
   E                 1.4000e-03  2.9136e+04  0.0000e+00       1
   eta              -1.2530e-02  4.5480e-02 -2.7561e-01  0.7828
Residual Variances:                                            
   Y                 1.1994e+00  1.5788e+06  0.0000e+00        
   E                 7.1466e-01  2.5832e+06  0.0000e+00        
   eta               8.6874e-01  1.5788e+06  0.0000e+00        
Warning message:
In print.lvmfit(x) : Small singular value: 5.860766e-14
#+end_example

The non identifiability come from the fact that the only equation
defining the parameters \(E \sim eta\) and \(\eta \sim \sim \eta\) is:
#+BEGIN_EXPORT latex
\begin{align*}
\Cov[Y,E] &= (E \sim eta) * (\eta \sim \sim \eta)
\end{align*}
#+END_EXPORT
This is clearly not identifiable: \(E \sim eta\) and \(Y \sim eta\) need to be constrained to be 1.
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
lvm.2Y.constrain <- lvm.2Y
regression(lvm.2Y.constrain,E~eta) <- 1
regression(lvm.2Y.constrain,Y~eta) <- 1
estimate(lvm.2Y.constrain, data = df.2Y)
#+END_SRC

#+RESULTS:
:                     Estimate Std. Error  Z-value P-value
: Intercepts:                                             
:    E                -0.00210    0.04452 -0.04718  0.9624
:    eta              -0.01253    0.04548 -0.27561  0.7828
: Residual Variances:                                     
:    Y                 0.95696    0.07081 13.51394        
:    E                 1.02482    0.07269 14.09907        
:    eta               1.11122    0.07518 14.78015

** Example 2: lvm with bivariate outcome with group effect
Let's modify the previous model by adding an exogenous variable
affecting the latent variable:

#+BEGIN_SRC R :exports both :results output :session *R* :cache no
lvm.2Y.Age <- lvm.2Y
regression(lvm.2Y.Age) <- eta~Age
#+END_SRC

#+RESULTS:

#+BEGIN_SRC R :results output raw drawer  :exports none :session *R* :cache no 
pdf(file.path(path.figure,"show-bivariateLVM-Age.pdf"))
plot(lvm.2Y.Age)
dev.off()
#+END_SRC

#+RESULTS:
:RESULTS:
null device 
          1
:END:

#+ATTR_LATEX: :width 0.5\textwidth
file:./figures/show-bivariateLVM-Age.pdf

The new *modeled variance-covariance matrix* contains 6 parameters:
#+BEGIN_EXPORT latex
\begin{align*}
\theta = \left( Y \sim \sim Y,  \eta \sim \sim \eta, E \sim \eta, \eta \sim Age, E \sim \sim E, Age \sim \sim Age \right)
\end{align*}
#+END_EXPORT
while the new *empirical variance-covariance matrix* contains 6 parameters:
#+BEGIN_EXPORT latex
\begin{align*}
S = 
\begin{bmatrix} 
\Var(Y) & \Cov(Y,E) & \Cov(Y,Age) \\ & \Var(E) & \Cov(E,Age) \\ && \Var(Age) \\
\end{bmatrix} 
\end{align*}
#+END_EXPORT
So the model satisfy one necessary condition for being
identifiable. This condition is however not sufficient to ensure
identifiability but is easier to check than the NSC (nessary and
sufficient condition). To check the NSC we need to write down the
equations relating the empirical and the theoretical moments:
#+BEGIN_EXPORT latex
\begin{align*}
\Var(Y) &= Y \sim \sim Y + \eta \sim \sim \eta \\
\Var(E) &= E \sim \sim E + (E \sim \eta) * (\eta \sim \sim \eta) \\
\Var(Age) &= Age \sim \sim Age \\
\Cov(Y,E) &= (E \sim \eta) * (\eta \sim \sim \eta) \\
\Cov(Y,Age) &= (\eta \sim Age) * (Age \sim \sim Age) \\
\Cov(E,Age) &= (E \sim \eta) * (\eta \sim Age) * (Age \sim \sim Age) \\
\end{align*}
#+END_EXPORT
We can re-writte that in matricial form:
#+BEGIN_EXPORT latex
\begin{align*}
\begin{bmatrix}
\Var(Y) \\
\Var(E) \\
\Var(Age) \\
\Cov(Y,E) \\
\Cov(Y,Age) \\
\Cov(E,Age) \\
\end{bmatrix}
& = \begin{bmatrix}
1&0&1&0&0&0\\
0&1&1&0&1&0\\
0&0&0&1&0&0\\
0&0&1&0&1&0\\
0&0&0&1&0&1\\
0&0&0&1&1&1\\
\end{bmatrix}
\begin{bmatrix}
Y \sim \sim Y \\
E \sim \sim E \\
\eta \sim \sim \eta \\
Age \sim \sim Age \\
E \sim \eta \\
\eta \sim Age \\
\end{bmatrix} \\
b &= X \theta
\end{align*}
#+END_EXPORT
This problem is identifiable if and only if \(X\) has non-zero eigenvalues:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
X <- rbind(c(1,0,1,0,0,0),
c(0,1,1,0,1,0),
c(0,0,0,1,0,0),
c(0,0,1,0,1,0),
c(0,0,0,1,0,1),
c(0,0,0,1,1,1))
svd(X)$d
#+END_SRC

#+RESULTS:
: [1] 2.4825297 2.0685860 1.2223636 0.7442566 0.6272682 0.3412366

Therefore the model is identifiable.

This is confirmed by the fact that lava is able to estimate the model:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
df.2Y.Age <- sim(lvm.2Y.Age, n = n)
estimate(lvm.2Y.Age, data = df.2Y.Age)
#+END_SRC

#+RESULTS:
#+begin_example
                    Estimate Std. Error  Z-value  P-value
Measurements:                                            
   E~eta             0.96646    0.04292 22.51840   <1e-12
Regressions:                                             
   eta~Age           0.99045    0.04471 22.15342   <1e-12
Intercepts:                                              
   E                 0.01056    0.04342  0.24329   0.8078
   eta              -0.01966    0.04560 -0.43102   0.6665
Residual Variances:                                      
   Y                 1.02097    0.08577 11.90430         
   E                 0.91723    0.07925 11.57325         
   eta               1.04853    0.08643 12.13190
#+end_example

Compared to the previous example two equations now define the parameters \(E \sim
eta\) and \(\eta \sim \sim \eta\):
#+BEGIN_EXPORT latex
\begin{align*}
\Cov[Y,E] &= (E \sim eta) * (\eta \sim \sim \eta) \\
\Cov[E,Age] &= (E \sim eta) * (\eta \sim Age) * (Age \sim \sim Age)
\end{align*}
#+END_EXPORT

Note that the model is exactly identifiable in the sense that we have
exactly the same number of parameters and moments. Adding an
additional link between age and one outcome would make the model non
identifiable since we would increase by one the number of parameters
(p=7) while still having only 6 moments.

#+BEGIN_SRC R :exports both :results output :session *R* :cache no
lvm.2Y.Age2 <- lvm.2Y.Age
regression(lvm.2Y.Age2) <- Y~Age
#+END_SRC

#+RESULTS:

#+BEGIN_SRC R :results output raw drawer  :exports none :session *R* :cache no 
pdf(file.path(path.figure,"show-bivariateLVM-Age2.pdf"))
plot(lvm.2Y.Age2)
dev.off()
#+END_SRC

#+RESULTS:
:RESULTS:
null device 
          1
:END:

#+ATTR_LATEX: :width 0.5\textwidth
file:./figures/show-bivariateLVM-Age2.pdf

Indeed lava is not able to estimate the model:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
df.2Y.Age2 <- sim(lvm.2Y.Age2, n = n)
estimate(lvm.2Y.Age2, data = df.2Y.Age2)
#+END_SRC

#+RESULTS:
#+begin_example
                       Estimate  Std. Error     Z-value P-value
Measurements:                                                  
   E~eta             1.3544e+00  2.2204e+06  0.0000e+00       1
Regressions:                                                   
   Y~Age             1.2835e+00  1.1580e+06  0.0000e+00       1
    eta~Age          7.0634e-01  1.1580e+06  0.0000e+00       1
Intercepts:                                                    
   E                 1.4810e-02  4.1842e+04  0.0000e+00       1
   eta              -1.8840e-02  4.5550e-02 -4.1374e-01  0.6791
Residual Variances:                                            
   Y                 1.3201e+00  1.2210e+06  0.0000e+00        
   E                 5.3293e-01  2.2398e+06  0.0000e+00        
   eta               7.4481e-01  1.2210e+06  0.0000e+00        
Warning messages:
1: In estimate.lvm(lvm.2Y.Age2, data = df.2Y.Age2) :
  Lack of convergence. Increase number of iteration or change starting values.
2: In print.lvmfit(x) : Small singular value: 6.405291e-14
#+end_example

* CONFIG :noexport:
# #+LaTeX_HEADER:\affil{Department of Biostatistics, University of Copenhagen, Copenhagen, Denmark}
#+LANGUAGE:  en
#+LaTeX_CLASS: org-article
#+OPTIONS:   title:t author:t toc:nil todo:t 
#+OPTIONS:   H:3 num:t 
#+OPTIONS:   TeX:t LaTeX:t

** Additional commands
#+LaTeX_HEADER: %
#+LaTeX_HEADER: %%%% additional latex commands %%%%
#+LaTeX_HEADER: %

** Additional packages
#+LaTeX_HEADER: %
#+LaTeX_HEADER: %%%% additional packages %%%%
#+LaTeX_HEADER: %
#+LaTeX_HEADER:\usepackage{authblk}

** Algorithm
#+LATEX_HEADER: \RequirePackage{amsmath}
#+LATEX_HEADER: \RequirePackage{algorithm}
#+LATEX_HEADER: \RequirePackage[noend]{algpseudocode}

** Code
#+PROPERTY: header-args :session *R*
#+PROPERTY: header-args :tange yes % extract source code: http://orgmode.org/manual/Extracting-source-code.html
#+PROPERTY: header-args :eval yes :cache no

** Display 
#+LATEX_HEADER: \RequirePackage{colortbl} % arrayrulecolor to mix colors
#+LATEX_HEADER: %% \input{0_Display.tex}

** Image
#+LATEX_HEADER: \RequirePackage{epstopdf} % to be able to convert .eps to .pdf image files

** Math
#+LATEX_HEADER: \RequirePackage{ifthen}
#+LATEX_HEADER: \RequirePackage{xspace} % space for newcommand macro
#+LATEX_HEADER: \RequirePackage{xifthen}
#+LATEX_HEADER: \RequirePackage{xargs}
#+LATEX_HEADER: \RequirePackage{dsfont}
#+LATEX_HEADER: \RequirePackage{amsmath,stmaryrd,graphicx}
#+LATEX_HEADER: \RequirePackage{prodint} % product integral symbol (\PRODI)

*** Template for shortcut
#+LATEX_HEADER: \newcommand\defOperator[7]{%
#+LATEX_HEADER:	\ifthenelse{\isempty{#2}}{
#+LATEX_HEADER:		\ifthenelse{\isempty{#1}}{#7{#3}#4}{#7{#3}#4 \left#5 #1 \right#6}
#+LATEX_HEADER:	}{
#+LATEX_HEADER:	\ifthenelse{\isempty{#1}}{#7{#3}#4_{#2}}{#7{#3}#4_{#1}\left#5 #2 \right#6}
#+LATEX_HEADER: }
#+LATEX_HEADER: }

#+LATEX_HEADER: \newcommand\defUOperator[5]{%
#+LATEX_HEADER: \ifthenelse{\isempty{#1}}{
#+LATEX_HEADER:		#5\left#3 #2 \right#4
#+LATEX_HEADER: }{
#+LATEX_HEADER:	\ifthenelse{\isempty{#2}}{\underset{#1}{\operatornamewithlimits{#5}}}{
#+LATEX_HEADER:		\underset{#1}{\operatornamewithlimits{#5}}\left#3 #2 \right#4}
#+LATEX_HEADER: }
#+LATEX_HEADER: }

#+LATEX_HEADER: \newcommand{\defBoldVar}[2]{	
#+LATEX_HEADER:	\ifthenelse{\equal{#2}{T}}{\boldsymbol{#1}}{\mathbf{#1}}
#+LATEX_HEADER: }

*** Shortcuts
#+LATEX_HEADER: \newcommandx\Cov[2][1=,2=]{\defOperator{#1}{#2}{C}{ov}{[}{]}{\mathbb}}
#+LATEX_HEADER: \newcommandx\Esp[2][1=,2=]{\defOperator{#1}{#2}{E}{}{[}{]}{\mathbb}}
#+LATEX_HEADER: \newcommandx\Prob[2][1=,2=]{\defOperator{#1}{#2}{P}{}{[}{]}{\mathbb}}
#+LATEX_HEADER: \newcommandx\Qrob[2][1=,2=]{\defOperator{#1}{#2}{Q}{}{[}{]}{\mathbb}}
#+LATEX_HEADER: \newcommandx\Var[2][1=,2=]{\defOperator{#1}{#2}{V}{ar}{[}{]}{\mathbb}}

#+LATEX_HEADER: \newcommandx\Binom[2][1=,2=]{\defOperator{#1}{#2}{B}{}{(}{)}{\mathcal}}
#+LATEX_HEADER: \newcommandx\Gaus[2][1=,2=]{\defOperator{#1}{#2}{N}{}{(}{)}{\mathcal}}
#+LATEX_HEADER: \newcommandx\Wishart[2][1=,2=]{\defOperator{#1}{#2}{W}{ishart}{(}{)}{\mathcal}}
#+LATEX_HEADER: \newcommandx\Likelihood[2][1=,2=]{\defOperator{#1}{#2}{L}{}{(}{)}{\mathcal}}
#+LATEX_HEADER: \newcommandx\Information[2][1=,2=]{\defOperator{#1}{#2}{I}{}{(}{)}{\mathcal}}
#+LATEX_HEADER: \newcommandx\Score[2][1=,2=]{\defOperator{#1}{#2}{S}{}{(}{)}{\mathcal}}

#+LATEX_HEADER: \newcommandx\Vois[2][1=,2=]{\defOperator{#1}{#2}{V}{}{(}{)}{\mathcal}}
#+LATEX_HEADER: \newcommandx\IF[2][1=,2=]{\defOperator{#1}{#2}{IF}{}{(}{)}{\mathcal}}
#+LATEX_HEADER: \newcommandx\Ind[1][1=]{\defOperator{}{#1}{1}{}{(}{)}{\mathds}}

#+LATEX_HEADER: \newcommandx\Max[2][1=,2=]{\defUOperator{#1}{#2}{(}{)}{min}}
#+LATEX_HEADER: \newcommandx\Min[2][1=,2=]{\defUOperator{#1}{#2}{(}{)}{max}}
#+LATEX_HEADER: \newcommandx\argMax[2][1=,2=]{\defUOperator{#1}{#2}{(}{)}{argmax}}
#+LATEX_HEADER: \newcommandx\argMin[2][1=,2=]{\defUOperator{#1}{#2}{(}{)}{argmin}}
#+LATEX_HEADER: \newcommandx\cvD[2][1=D,2=n \rightarrow \infty]{\xrightarrow[#2]{#1}}

#+LATEX_HEADER: \newcommandx\Hypothesis[2][1=,2=]{
#+LATEX_HEADER:         \ifthenelse{\isempty{#1}}{
#+LATEX_HEADER:         \mathcal{H}
#+LATEX_HEADER:         }{
#+LATEX_HEADER: 	\ifthenelse{\isempty{#2}}{
#+LATEX_HEADER: 		\mathcal{H}_{#1}
#+LATEX_HEADER: 	}{
#+LATEX_HEADER: 	\mathcal{H}^{(#2)}_{#1}
#+LATEX_HEADER:         }
#+LATEX_HEADER:         }
#+LATEX_HEADER: }

#+LATEX_HEADER: \newcommandx\dpartiel[4][1=,2=,3=,4=\partial]{
#+LATEX_HEADER: 	\ifthenelse{\isempty{#3}}{
#+LATEX_HEADER: 		\frac{#4 #1}{#4 #2}
#+LATEX_HEADER: 	}{
#+LATEX_HEADER: 	\left.\frac{#4 #1}{#4 #2}\right|_{#3}
#+LATEX_HEADER: }
#+LATEX_HEADER: }

#+LATEX_HEADER: \newcommandx\dTpartiel[3][1=,2=,3=]{\dpartiel[#1][#2][#3][d]}

#+LATEX_HEADER: \newcommandx\ddpartiel[3][1=,2=,3=]{
#+LATEX_HEADER: 	\ifthenelse{\isempty{#3}}{
#+LATEX_HEADER: 		\frac{\partial^{2} #1}{\left( \partial #2\right)^2}
#+LATEX_HEADER: 	}{
#+LATEX_HEADER: 	\frac{\partial^2 #1}{\partial #2\partial #3}
#+LATEX_HEADER: }
#+LATEX_HEADER: } 

#+LATEX_HEADER: \newcommand\Real{\mathbb{R}}
#+LATEX_HEADER: \newcommand\Rational{\mathbb{Q}}
#+LATEX_HEADER: \newcommand\Natural{\mathbb{N}}
#+LATEX_HEADER: \newcommand\trans[1]{{#1}^\intercal}%\newcommand\trans[1]{{\vphantom{#1}}^\top{#1}}
#+LATEX_HEADER: \newcommand{\independent}{\mathrel{\text{\scalebox{1.5}{$\perp\mkern-10mu\perp$}}}}
